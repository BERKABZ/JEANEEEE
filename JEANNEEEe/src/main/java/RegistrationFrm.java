/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author WS
 */
import java.awt.Color;
import java.awt.Font;
import java.io.*;
import javax.swing.JOptionPane;

public class RegistrationFrm extends javax.swing.JFrame {

    public static String registeredUsername;
    public static String registeredPassword;
    public static String registeredFirstame;
    public static String registeredLastname;
    public static String registeredAddress;
    
    public String getRegisteredUsername(){
        return registeredUsername;
    }
    public String getRegisteredPassword(){
        return registeredPassword;
    }
    public String getRegisteredFirstame(){
        return registeredFirstame;
    }
    public String getRegisteredLastname(){
        return registeredLastname;
    }
    public String getRegisteredAddress(){
        return registeredAddress;
    }
    public RegistrationFrm() {
        initComponents();
    }
    
    static String username;
    static String password;
    static String confirmPassword;
    static String firstname;
    static String lastname;
    static String address;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpspec = new javax.swing.ButtonGroup();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userError = new javax.swing.JLabel();
        txtusername = new javax.swing.JTextField();
        errorPass = new javax.swing.JLabel();
        errorConfirmPass = new javax.swing.JLabel();
        errorFirstname = new javax.swing.JLabel();
        txtfirstname = new javax.swing.JTextField();
        errorLastname = new javax.swing.JLabel();
        txtlastname = new javax.swing.JTextField();
        errorAddress = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtpassword = new javax.swing.JPasswordField();
        txtconfirmpassword = new javax.swing.JPasswordField();
        gender = new javax.swing.JComboBox<>();
        chkshow = new javax.swing.JCheckBox();
        lblerror = new javax.swing.JLabel();
        checkprogramming = new javax.swing.JCheckBox();
        checkvisualgraphics = new javax.swing.JCheckBox();
        checkteamlead = new javax.swing.JCheckBox();
        checkdesign = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        rbjava = new javax.swing.JRadioButton();
        rbpython = new javax.swing.JRadioButton();
        btnsubmit = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblLogin = new javax.swing.JLabel();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        lbl5 = new javax.swing.JLabel();
        lbl6 = new javax.swing.JLabel();

        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("*");

        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("*");

        jLabel12.setText("jLabel12");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setBackground(new java.awt.Color(102, 255, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTRATION FORM");

        userError.setBackground(new java.awt.Color(102, 255, 204));
        userError.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userError.setText("Username");

        txtusername.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtusername.setForeground(new java.awt.Color(153, 153, 153));
        txtusername.setText(" username");
        txtusername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtusername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtusernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtusernameFocusLost(evt);
            }
        });
        txtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusernameActionPerformed(evt);
            }
        });

        errorPass.setBackground(new java.awt.Color(102, 255, 204));
        errorPass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorPass.setText("Password");

        errorConfirmPass.setBackground(new java.awt.Color(102, 255, 204));
        errorConfirmPass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorConfirmPass.setText("Confirm Password");

        errorFirstname.setBackground(new java.awt.Color(102, 255, 204));
        errorFirstname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorFirstname.setText("First name:");

        txtfirstname.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtfirstname.setForeground(new java.awt.Color(153, 153, 153));
        txtfirstname.setText(" firstname");
        txtfirstname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtfirstname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfirstnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfirstnameFocusLost(evt);
            }
        });
        txtfirstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfirstnameActionPerformed(evt);
            }
        });

        errorLastname.setBackground(new java.awt.Color(102, 255, 204));
        errorLastname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorLastname.setText("Lastname:");

        txtlastname.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtlastname.setForeground(new java.awt.Color(153, 153, 153));
        txtlastname.setText(" lastname");
        txtlastname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtlastname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtlastnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtlastnameFocusLost(evt);
            }
        });

        errorAddress.setBackground(new java.awt.Color(102, 255, 204));
        errorAddress.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorAddress.setText("Address:");

        txtaddress.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtaddress.setForeground(new java.awt.Color(153, 153, 153));
        txtaddress.setText(" address");
        txtaddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtaddress.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtaddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtaddressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtaddressFocusLost(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(102, 255, 204));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Sex:");

        txtpassword.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtpassword.setForeground(new java.awt.Color(153, 153, 153));
        txtpassword.setText(" Password");
        txtpassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtpassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtpasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpasswordFocusLost(evt);
            }
        });
        txtpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpasswordActionPerformed(evt);
            }
        });

        txtconfirmpassword.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtconfirmpassword.setForeground(new java.awt.Color(153, 153, 153));
        txtconfirmpassword.setText(" Password");
        txtconfirmpassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtconfirmpassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtconfirmpasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtconfirmpasswordFocusLost(evt);
            }
        });

        gender.setBackground(new java.awt.Color(204, 204, 204));
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others", " ", " " }));
        gender.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        chkshow.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        chkshow.setForeground(new java.awt.Color(51, 51, 51));
        chkshow.setText("show");
        chkshow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkshowActionPerformed(evt);
            }
        });

        lblerror.setBackground(new java.awt.Color(102, 255, 204));
        lblerror.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblerror.setText("Skills:");

        checkprogramming.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkprogramming.setText("Programming");
        checkprogramming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkprogrammingActionPerformed(evt);
            }
        });

        checkvisualgraphics.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkvisualgraphics.setText("Visual Graphics");
        checkvisualgraphics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkvisualgraphicsActionPerformed(evt);
            }
        });

        checkteamlead.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkteamlead.setText("Team Lead");
        checkteamlead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkteamleadActionPerformed(evt);
            }
        });

        checkdesign.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkdesign.setText("UI/UX Design");
        checkdesign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkdesignActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(102, 255, 204));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Specialization:");

        btngrpspec.add(rbjava);
        rbjava.setText("Java");
        rbjava.setToolTipText("");

        btngrpspec.add(rbpython);
        rbpython.setText("Python");

        btnsubmit.setBackground(new java.awt.Color(51, 102, 255));
        btnsubmit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnsubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnsubmit.setText("Submit");
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });

        jLabel11.setText("Already have an account?");

        lblLogin.setForeground(new java.awt.Color(51, 51, 51));
        lblLogin.setText("Log in");
        lblLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLoginMouseClicked(evt);
            }
        });

        lbl1.setForeground(new java.awt.Color(255, 0, 0));
        lbl1.setText("*");

        lbl2.setForeground(new java.awt.Color(255, 0, 0));
        lbl2.setText("*");

        lbl4.setForeground(new java.awt.Color(255, 0, 0));
        lbl4.setText("*");

        lbl3.setForeground(new java.awt.Color(255, 0, 0));
        lbl3.setText("*");

        lbl5.setForeground(new java.awt.Color(255, 0, 0));
        lbl5.setText("*");

        lbl6.setForeground(new java.awt.Color(255, 0, 0));
        lbl6.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(userError)
                                    .addComponent(errorPass)
                                    .addComponent(errorConfirmPass)
                                    .addComponent(errorFirstname)
                                    .addComponent(errorLastname)
                                    .addComponent(errorAddress)
                                    .addComponent(jLabel8)
                                    .addComponent(lblerror)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtconfirmpassword)
                                                    .addComponent(txtfirstname)
                                                    .addComponent(txtlastname)
                                                    .addComponent(txtaddress)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(0, 0, Short.MAX_VALUE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lbl4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lbl3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lbl6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lbl5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(20, 20, 20))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(141, 141, 141)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                        .addComponent(chkshow))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(checkprogramming, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(checkteamlead)
                                                    .addComponent(rbjava))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rbpython)
                                                    .addComponent(checkdesign)
                                                    .addComponent(checkvisualgraphics))))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLogin)
                .addGap(154, 154, 154))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userError)
                            .addComponent(lbl1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl2)
                            .addComponent(chkshow, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(errorPass))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtpassword, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtconfirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorConfirmPass)
                    .addComponent(lbl3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errorFirstname)
                    .addComponent(txtfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errorLastname)
                    .addComponent(txtlastname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errorAddress)
                    .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkprogramming)
                    .addComponent(checkvisualgraphics)
                    .addComponent(lblerror))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkteamlead)
                    .addComponent(checkdesign))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(rbjava)
                    .addComponent(rbpython))
                .addGap(18, 18, 18)
                .addComponent(btnsubmit)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogin)
                    .addComponent(jLabel11))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void lblLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLoginMouseClicked
        // TODO add your handling code here:
        Login form = new Login();
        form.show();
        this.hide();
    }//GEN-LAST:event_lblLoginMouseClicked

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
        username = txtusername.getText();
        password = txtpassword.getText();
        confirmPassword = txtconfirmpassword.getText();
        firstname = txtfirstname.getText();
        lastname = txtlastname.getText();
        address = txtaddress.getText();
        
        try{
            if(txtusername.getText().equals("username") &&
               txtpassword.getText().equals("password") &&
                    txtconfirmpassword.getText().equalsIgnoreCase("confirm password") &&
                    txtfirstname.getText().equals("firstname") &&
                    txtlastname.getText().equals("lastname") && 
                    txtaddress.getText().equals("address")){
            }
            // if name is empty
            if((username.isEmpty() && password.isEmpty() && confirmPassword.isEmpty() && firstname.isBlank() && lastname.isEmpty() && address.isEmpty()) || 
               (txtusername.getText().equals("username") &&
                txtpassword.getText().equals("password") &&
                txtconfirmpassword.getText().equalsIgnoreCase("confirm password") &&
                txtfirstname.getText().equals("firstname") &&
                txtlastname.getText().equals("lastname") && 
                txtaddress.getText().equals("address")))
                {
                    userError.setText("*");
                    userError.setForeground(Color.red);
                    errorPass.setText("*");
                    errorPass.setForeground(Color.red);
                    errorConfirmPass.setText("*");
                    errorConfirmPass.setForeground(Color.red);
                    errorFirstname.setText("*");
                    errorFirstname.setForeground(Color.red);
                    errorLastname.setText("*");
                    errorLastname.setForeground(Color.red);
                    errorAddress.setText("*");
                    errorAddress.setForeground(Color.red);
                    return;
            }
            // username is empty
            if(username.isEmpty() || txtusername.getText().equalsIgnoreCase("username")){
                // if name and password is empty
                if(password.isEmpty() || txtpassword.getText().equalsIgnoreCase("password")){
                    // if name , password and confrim password is empty
                    if(confirmPassword.isEmpty() || txtconfirmpassword.getText().equalsIgnoreCase("confirm password")){
                        // if name , password, confrim password and firstname is empty
                        if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                            // if name , password, confrim password , firstname and lastname is empty
                            if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){                               
                                userError.setText("*");
                                userError.setForeground(Color.red);
                                errorPass.setText("*");
                                errorPass.setForeground(Color.red);
                                errorConfirmPass.setText("*");
                                errorConfirmPass.setForeground(Color.red);
                                errorFirstname.setText("*");
                                errorFirstname.setForeground(Color.red);
                                errorLastname.setText("*");
                                errorLastname.setForeground(Color.red);
                                return;
                            }
                            // if name, password, confirm password, firstname, address is empty
                            if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                                userError.setText("*");
                                userError.setForeground(Color.red);
                                errorPass.setText("*");
                                errorPass.setForeground(Color.red);
                                errorConfirmPass.setText("*");
                                errorConfirmPass.setForeground(Color.red);
                                errorFirstname.setText("*");
                                errorFirstname.setForeground(Color.red);                               
                                errorAddress.setText("*");
                                errorAddress.setForeground(Color.red);
                                return;
                            }
                            userError.setText("*");
                            userError.setForeground(Color.red);
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                 
                            return;
                        }
                        if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                            if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                                userError.setText("*");
                                userError.setForeground(Color.red);
                                errorPass.setText("*");
                                errorPass.setForeground(Color.red);
                                errorConfirmPass.setText("*");
                                errorConfirmPass.setForeground(Color.red);
                                errorLastname.setText("*");
                                errorLastname.setForeground(Color.red);
                                errorAddress.setText("*");
                                errorAddress.setForeground(Color.red);
                                return;
                            }
                            userError.setText("*");
                            userError.setForeground(Color.red);
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);          
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);          
                            return;
                        }
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                            userError.setText("*");
                            userError.setForeground(Color.red);
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }                     
                        userError.setText("*");
                        userError.setForeground(Color.red);
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);

                        return;
                    }
                    if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                        if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                            if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                                userError.setText("*");
                                userError.setForeground(Color.red);
                                errorPass.setText("*");
                                errorPass.setForeground(Color.red);                 
                                errorFirstname.setText("*");
                                errorFirstname.setForeground(Color.red);
                                errorLastname.setText("*");
                                errorLastname.setForeground(Color.red);
                                errorAddress.setText("*");
                                errorAddress.setForeground(Color.red);
                                return;
                            }
                            userError.setText("*");
                            userError.setForeground(Color.red);
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);                 
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            return;
                        }
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                             userError.setText("*");
                            userError.setForeground(Color.red);
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);   
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);                   
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                         userError.setText("*");
                        userError.setForeground(Color.red);
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);       
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        return;
                    }
                    if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                            if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                                userError.setText("*");
                                userError.setForeground(Color.red);
                                errorPass.setText("*");
                                errorPass.setForeground(Color.red);            
                                errorLastname.setText("*");
                                errorLastname.setForeground(Color.red);
                                errorAddress.setText("*");
                                errorAddress.setForeground(Color.red);
                                return;
                            }
                             userError.setText("*");
                            userError.setForeground(Color.red);
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);                    
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            return;
                    } 
                        userError.setText("*");
                       userError.setForeground(Color.red);
                       errorPass.setText("*");
                       errorPass.setForeground(Color.red);
                    return;
                }
                //if confirm password is empty
                if(confirmPassword.isEmpty() || txtconfirmpassword.getText().equalsIgnoreCase("confirm password")){
                    if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                        if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                            if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                                 userError.setText("*");
                                userError.setForeground(Color.red);                
                                errorConfirmPass.setText("*");
                                errorConfirmPass.setForeground(Color.red);
                                errorFirstname.setText("*");
                                errorFirstname.setForeground(Color.red);
                                errorLastname.setText("*");
                                errorLastname.setForeground(Color.red);
                                errorAddress.setText("*");
                                errorAddress.setForeground(Color.red);
                                return;
                            }
                             userError.setText("*");
                            userError.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            return;
                        }
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                             userError.setText("*");
                            userError.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                            userError.setText("*");
                            userError.setForeground(Color.red);              
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);               
                        return;
                    }
                    if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                            userError.setText("*");
                            userError.setForeground(Color.red);               
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);                  
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                            userError.setText("*");
                            userError.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                        return;
                    }
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        userError.setText("*");
                        userError.setForeground(Color.red);
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                        userError.setText("*");
                        userError.setForeground(Color.red);
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                    return;
                }
                //if firstname is empty
                if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                    if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                            userError.setText("*");
                            userError.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                        userError.setText("*");
                        userError.setForeground(Color.red);             
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);
                            return;
                    }
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        userError.setText("*");
                        userError.setForeground(Color.red);
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                    userError.setText("*");
                    userError.setForeground(Color.red);
                    errorFirstname.setText("*");
                    errorFirstname.setForeground(Color.red);
                    return;
                }
                //if lastname is empty
                if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        userError.setText("*");
                        userError.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                    userError.setText("*");
                    userError.setForeground(Color.red);
                    errorLastname.setText("*");
                    errorLastname.setForeground(Color.red);
                    return;
                }
                //if address is empty
                if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                    userError.setText("*");
                    userError.setForeground(Color.red);              
                    errorAddress.setText("*");
                    errorAddress.setForeground(Color.red);
                    return;
                }
                userError.setText("*");
                userError.setForeground(Color.red);
                return;
            }
            //if password is empty
            if(password.isEmpty() || txtpassword.getText().equalsIgnoreCase("password")){
                if(confirmPassword.isEmpty() || txtconfirmpassword.getText().equalsIgnoreCase("confirm password")){
                    if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                        if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                            if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                                errorPass.setText("*");
                                errorPass.setForeground(Color.red);
                                errorConfirmPass.setText("*");
                                errorConfirmPass.setForeground(Color.red);
                                errorFirstname.setText("*");
                                errorFirstname.setForeground(Color.red);
                                errorLastname.setText("*");
                                errorLastname.setForeground(Color.red);
                                errorAddress.setText("*");
                                errorAddress.setForeground(Color.red);
                                return;
                            }
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            return;
                        }
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);                              
                        return;
                    }
                    if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);
                            errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);                                
                        return;
                    }
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                    errorPass.setText("*");
                    errorPass.setForeground(Color.red);
                    errorConfirmPass.setText("*");
                    errorConfirmPass.setForeground(Color.red); 
                    return;
                }
                if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                    if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                            errorPass.setText("*");
                            errorPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);
                        return;
                    }
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                    errorPass.setText("*");
                    errorPass.setForeground(Color.red);
                    errorFirstname.setText("*");
                    errorFirstname.setForeground(Color.red);
                    return;
                }
                if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        errorPass.setText("*");
                        errorPass.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                    errorPass.setText("*");
                    errorPass.setForeground(Color.red);
                    errorLastname.setText("*");
                    errorLastname.setForeground(Color.red);
                    return;
                }
                if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                    errorPass.setText("*");
                    errorPass.setForeground(Color.red);
                    errorAddress.setText("*");
                    errorAddress.setForeground(Color.red);
                    return;
                }
                errorPass.setText("*");
                errorPass.setForeground(Color.red);                          
                return;
            }
            // if confirm password is empty
            if(confirmPassword.isEmpty() || txtconfirmpassword.getText().equalsIgnoreCase("confirm password")){
                if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                    if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                        if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                           errorConfirmPass.setText("*");
                            errorConfirmPass.setForeground(Color.red);
                            errorFirstname.setText("*");
                            errorFirstname.setForeground(Color.red);
                            errorLastname.setText("*");
                            errorLastname.setForeground(Color.red);
                            errorAddress.setText("*");
                            errorAddress.setForeground(Color.red);
                            return;
                        }
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);
                        return;
                    }
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                    errorConfirmPass.setText("*");
                    errorConfirmPass.setForeground(Color.red);
                    errorFirstname.setText("*");
                    errorFirstname.setForeground(Color.red);
                    return;
                }
                if(lastname.isEmpty()){
                    if(address.isEmpty()){
                        errorConfirmPass.setText("*");
                        errorConfirmPass.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }
                    errorConfirmPass.setText("*");
                    errorConfirmPass.setForeground(Color.red);
                    errorLastname.setText("*");
                    errorLastname.setForeground(Color.red);
                    return;
                }
                if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                    errorConfirmPass.setText("*");
                    errorConfirmPass.setForeground(Color.red);
                    errorAddress.setText("*");
                    errorAddress.setForeground(Color.red);
                    return;
                }
                errorConfirmPass.setText("*");
                errorConfirmPass.setForeground(Color.red);
                return;
            }
            // if firstname is empty
            if(firstname.isEmpty() || txtfirstname.getText().equalsIgnoreCase("firstname")){
                if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                    if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                        errorFirstname.setText("*");
                        errorFirstname.setForeground(Color.red);
                        errorLastname.setText("*");
                        errorLastname.setForeground(Color.red);
                        errorAddress.setText("*");
                        errorAddress.setForeground(Color.red);
                        return;
                    }   
                    errorFirstname.setText("*");
                    errorFirstname.setForeground(Color.red);
                    errorLastname.setText("*");
                    errorLastname.setForeground(Color.red);
                    return;
                }
                if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                    errorFirstname.setText("*");
                    errorFirstname.setForeground(Color.red);
                    errorAddress.setText("*");
                    errorAddress.setForeground(Color.red);
                    return;
                }
                errorFirstname.setText("*");
                errorFirstname.setForeground(Color.red);
                
                return;
            }
            //if lastname is empty
            if(lastname.isEmpty() || txtlastname.getText().equalsIgnoreCase("lastname")){
                if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                    errorLastname.setText("*");
                    errorLastname.setForeground(Color.red);
                    errorAddress.setText("*");
                    errorAddress.setForeground(Color.red);
                    return;
                }
                errorLastname.setText("*");
                errorLastname.setForeground(Color.red);
                return;
            }
            if(address.isEmpty() || txtaddress.getText().equalsIgnoreCase("address")){
                errorAddress.setText("*");
                errorAddress.setForeground(Color.red);
                return;
            }
            if(!password.equals(confirmPassword)){
                errorPass.setText("*");
                errorPass.setForeground(Color.red);
                errorConfirmPass.setText("*");
                errorConfirmPass.setForeground(Color.red);
                return;
            }    
            if(!checkprogramming.isSelected() && !checkvisualgraphics.isSelected() && !checkteamlead.isSelected() && !checkdesign.isSelected()){
                lblerror.setText("Select Your Skills!");
                return;
            }
            if(!rbjava.isSelected() && !rbpython.isSelected()){
                lblerror.setText("Select Your Specialty!");
                return;
            }
            else{
                String filepath = "C:\\Users\\Edward\\Documents\\form\\bertKA" + username + ".txt";
                File file = new File(filepath);        
                if(file.exists()){
                    JOptionPane.showMessageDialog(this, "File Alreday exists..");
                    return;
                }            
                try(BufferedWriter writer = new BufferedWriter(new FileWriter(file))){
                    writer.write("USERNAME       : " + username);
                    writer.newLine();
                    writer.write("PASSWORD       : " + password);
                    writer.newLine();
                    writer.write("FIRSTNAME      : " + firstname);
                    writer.newLine();
                    writer.write("LASTNAME       : " + lastname);
                    writer.newLine();
                    writer.write("ADDRESS        : " + address);
                    writer.newLine();
                    writer.write("GENDER         : " + gender.getSelectedItem());
                    writer.newLine();
                    writer.write("SKILLS         : ");
                    if(checkprogramming.isSelected()){
                        Login lf = new Login();
                        writer.write(checkprogramming.getText() + " ");
                    }
                    if(checkvisualgraphics.isSelected()){
                        Login lf = new Login();
                        writer.write(checkvisualgraphics.getText() + " ");
                    }
                    if(checkteamlead.isSelected()){
                        Login lf = new Login();
                        writer.write(checkteamlead.getText() + " ");
                    }
                    if(checkdesign.isSelected()){
                        Login lf = new Login();
                        writer.write(checkdesign.getText());
                    }
                    writer.newLine();
                    if(rbjava.isSelected()) writer.write("SPECIALIZATION : " + rbjava.getText());
                    if(rbpython.isSelected()) writer.write("SPECIALIZATION : " + rbpython.getText());
                    
                    registeredUsername = username;
                    registeredPassword = password;
                    registeredFirstame = firstname;
                    registeredLastname = lastname;
                    registeredAddress = address;
                    
                    writer.close();
                    Login lf = new Login();
                    this.hide();
                    JOptionPane.showMessageDialog(this, "Registration Completed!");
                    lf.show();
                }
            }      
        }catch(Exception e){
            System.out.println("Error.");
        }   
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void checkdesignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkdesignActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkdesignActionPerformed

    private void checkteamleadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkteamleadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkteamleadActionPerformed

    private void checkvisualgraphicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkvisualgraphicsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkvisualgraphicsActionPerformed

    private void checkprogrammingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkprogrammingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkprogrammingActionPerformed

    private void chkshowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkshowActionPerformed

        if(chkshow.isSelected()){
            txtpassword.setEchoChar((char)0);
            txtconfirmpassword.setEchoChar((char)0);

        }else{
            txtpassword.setEchoChar('*');
            txtconfirmpassword.setEchoChar('*');

        }
    }//GEN-LAST:event_chkshowActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        
    }//GEN-LAST:event_genderActionPerformed

    private void txtconfirmpasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtconfirmpasswordFocusLost
        if(txtconfirmpassword.getText().isEmpty()){
            txtconfirmpassword.setForeground(Color.lightGray);
            txtconfirmpassword.setFont(new Font("Segue", Font.ITALIC, 14));
            txtconfirmpassword.setText("confirm password");
        }
    }//GEN-LAST:event_txtconfirmpasswordFocusLost

    private void txtconfirmpasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtconfirmpasswordFocusGained
        txtconfirmpassword.setBackground(Color.WHITE);
        txtconfirmpassword.setText("");
        txtconfirmpassword.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtconfirmpasswordFocusGained

    private void txtpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpasswordActionPerformed

    private void txtpasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpasswordFocusLost
                              
        if(txtpassword.getText().isEmpty()){
            txtpassword.setForeground(Color.lightGray);
            txtpassword.setFont(new Font("Segue", Font.ITALIC, 14));
            txtpassword.setText("Password");
        }
    }//GEN-LAST:event_txtpasswordFocusLost

    private void txtpasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpasswordFocusGained
        txtpassword.setBackground(Color.WHITE);
        txtpassword.setText("");
        txtpassword.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtpasswordFocusGained

    private void txtaddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtaddressFocusLost
        if(txtaddress.getText().isEmpty()){
            txtaddress.setForeground(Color.lightGray);
            txtaddress.setFont(new Font("Segue", Font.ITALIC, 14));
            txtaddress.setText("Address");
        }
    }//GEN-LAST:event_txtaddressFocusLost

    private void txtaddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtaddressFocusGained
        txtaddress.setBackground(Color.WHITE);
        txtaddress.setText("");
        txtaddress.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtaddressFocusGained

    private void txtlastnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlastnameFocusLost
        if(txtlastname.getText().isEmpty()){
            txtlastname.setForeground(Color.lightGray);
            txtlastname.setFont(new Font("Segue", Font.ITALIC, 14));
            txtlastname.setText("Lastname");
        }
    }//GEN-LAST:event_txtlastnameFocusLost

    private void txtlastnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlastnameFocusGained
        txtlastname.setBackground(Color.WHITE);
        txtlastname.setText("");
        txtlastname.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtlastnameFocusGained

    private void txtfirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfirstnameActionPerformed

    private void txtfirstnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfirstnameFocusLost
        if(txtfirstname.getText().isEmpty()){
            txtfirstname.setForeground(Color.lightGray);
            txtfirstname.setFont(new Font("Segue", Font.ITALIC, 14));
            txtfirstname.setText("Firstname");
        }
    }//GEN-LAST:event_txtfirstnameFocusLost

    private void txtfirstnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfirstnameFocusGained
        txtfirstname.setBackground(Color.WHITE);
        txtfirstname.setText("");
        txtfirstname.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtfirstnameFocusGained

    private void txtusernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtusernameFocusLost
         if(txtusername.getText().isEmpty()){
            txtusername.setForeground(Color.lightGray);
            txtusername.setFont(new Font("Segue", Font.ITALIC, 14));
            txtusername.setText("Username");
        }
    }//GEN-LAST:event_txtusernameFocusLost

    private void txtusernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtusernameFocusGained
        txtusername.setBackground(Color.WHITE);
        txtusername.setText("");
        txtusername.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtusernameFocusGained

    private void txtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusernameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btngrpspec;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JCheckBox checkdesign;
    private javax.swing.JCheckBox checkprogramming;
    private javax.swing.JCheckBox checkteamlead;
    private javax.swing.JCheckBox checkvisualgraphics;
    private javax.swing.JCheckBox chkshow;
    private javax.swing.JLabel errorAddress;
    private javax.swing.JLabel errorConfirmPass;
    private javax.swing.JLabel errorFirstname;
    private javax.swing.JLabel errorLastname;
    private javax.swing.JLabel errorPass;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblerror;
    private javax.swing.JRadioButton rbjava;
    private javax.swing.JRadioButton rbpython;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JPasswordField txtconfirmpassword;
    private javax.swing.JTextField txtfirstname;
    private javax.swing.JTextField txtlastname;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txtusername;
    private javax.swing.JLabel userError;
    // End of variables declaration//GEN-END:variables
}
